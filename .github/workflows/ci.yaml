name: "CI Pipeline"

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    if: false #temp disable the job to work 
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.2.1
        with:
          args: >
            -Dsonar.organization=raunaksmatharu
            -Dsonar.projectKey=RaunakSMatharu_juice-shop
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: sonar cube quality gate badge
        run: |
            echo "## SonarQube Scan" >>  $GITHUB_STEP_SUMMARY
            echo "[![Quality gate](https://sonarcloud.io/api/project_badges/quality_gate?project=RaunakSMatharu_juice-shop)](https://sonarcloud.io/summary/new_code?id=RaunakSMatharu_juice-shop)" >> $GITHUB_STEP_SUMMARY

  docker-build:
    runs-on: ubuntu-latest
    if: false #temp disable the job to work 
    
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      
      - name: "workflow summary"
        run: echo "## Docker Scan Result" >> $GITHUB_STEP_SUMMARY
      
      - name: "Docker Login"
        uses: docker/login-action@v3.3.0
        with:
          username: rm1100
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build Docker image"
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: rm1100/juice-shop:${{ github.run_id }}

      - name: "Docker Scout"
        uses: docker/scout-action@v1.16.1
        with:
          image-name: "rm1100/juice-shop:${{ github.run_id }}"
          command: "quickview"
          only-severities: critical,high
          exit-code: true


      - name: "Push Docker image"
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: rm1100/juice-shop:${{ github.run_id }}

  terraform-deploy:
    runs-on: ubuntu-latest
    env:
        TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.10.0'

      - name: Terraform Init and Apply
        run: |
          terraform init -backend-config="address=https://app.terraform.io" \
                         -backend-config="organization=${{ secrets.TF_ORG }}" \
                         -backend-config="workspaces.name=${{ secrets.TF_WORKSPACE }}"
          terraform apply -auto-approve
        working-directory: ./terraform
       